// const CORS = "https://cors-anywhere.herokuapp.com/";
// sessionStorage.clear();

window._config = {
  cognito: {
    userPoolId: "us-east-1_InedFezwr",
    region: "us-east-1",
    clientId: "2g2q4svd2pg3lro7jv9ae5q59h",
  },
};

let poolData = {
  UserPoolId: _config.cognito.userPoolId,
  ClientId: _config.cognito.clientId,
};

const CORS = "";

const ENDPOINT = "https://api.ahmedalnajjar.com/dev";

const bootstrapCDN = `<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css">`;
const style = `<style>
                @media print {
                  .sticky-footer {
                      position: fixed;
                      bottom: 0;
                  }
                }
              </style>`;

if (document.querySelector("iframe") != null) {
  const frame = document.querySelector("iframe");
  frame.addEventListener("load", resizeIframe);
  function resizeIframe(obj) {
    obj.style.height = `${obj.contentWindow.document.body.offsetHeight}px`;
    obj.scrolling = "no";
  }
}

function successToast(message) {
  $.toast({
    icon: "success",
    text: `<p class='p-3'>${message}</p>`,
    delay: "3000",
    position: "top-right",
    dismissible: false,
  });
}

function warningToast(message) {
  $.toast({
    icon: "warning",
    text: `<p class='p-3'>${message}</p>`,
    delay: "3000",
    position: "top-right",
    dismissible: false,
  });
}

function dangerToast(message) {
  $.toast({
    icon: "danger",
    text: `<p class='p-3'>${message}</p>`,
    delay: "3000",
    position: "top-right",
    dismissible: false,
  });
}

$(document).on("click", ".action, a", function (e) {
  var action = $(this).data("action");
  var id = $(this).data("id");
  console.log("action - ", action, id);

  if (action === "profile") {
    getResponse(
      "/admin/users",
      { filter_name: "sub", filter_value: $(this).data("pid") },
      userProfileModal
    );
  }

  if (action === "confirm") {
    confirmAppointment(
      $(this).data("eid"),
      $(this).data("pid"),
      $(this).data("ptMail"),
      $(this).data("docMail")
    );
  }

  if (action === "invoice") {
    showInvoice(id);
  }

  if (action === "reschedule") {
    rescheduleAppointment($(this).data("eid"));
  }

  if (action === "forms") {
    console.log("submit form");
    submitForms(this);
  }

  if (action === "pt-dashboard") {
    openPatientDashboard($(this).data("pid"), $(this).data("eid"));
  }

  if (action === "pt-dashboard-home") {
    ptDashboardInit();
  }

  if (action === "view-forms") {
    ptViewFormsSection();
  }

  if (action === "view-form") {
    let form_type = $(this).data("formType");
    let created = $(this).data("created");
    ptShowForm(form_type, created);
  }

  if (action === "visit-details") {
    ptVisitDetailsSection();
  }

  if (action === "view-visit-details") {
    ptShowVisitDetails($(this).data("formType"), $(this).data("created"));
  }
  if (action === "user-reports") {
    ptUserReportsSection();
  }

  if (action === "view-user-report") {
    ptShowUserReport($(this).data("created"));
  }
});

function submitForms(obj) {
  console.log(form2js("forms", ".", true, null));

  var formData = form2js("forms", ".", true, null);
  if (formData.phone_number != null) {
    formData.phone_number =
      "+" +
      $(".tel-phone-input").intlTelInput("getSelectedCountryData").dialCode +
      formData.phone_number;
  }
  formData.email = sessionStorage.getItem("pt-email");
  console.log(formData);
  $.ajax({
    url: `${ENDPOINT}/users/${sessionStorage.getItem("pid")}/forms`,
    method: "POST",
    contentType: "application/json",
    data: JSON.stringify(formData),
    processing: false,
  })
    .done(function (res) {
      console.log(res);
      successToast("Submitted Successfully");
    })
    .fail(function (err) {
      console.log(err);
    });
}

function ptRenderChecklist(data) {
  console.log("render-form -", data);
  if (data.statusCode == 200) {
    console.log("success ");
    drawChart(data.body.Items[0].survey);
  }
}

function ptShowUserReport(created) {
  getResponse(
    `/users/${sessionStorage.getItem("pid")}/checklist`,
    {
      email: sessionStorage.getItem("pt-email"),
      created: created,
    },
    ptRenderChecklist
  );
}

function ptViewUserReportsList(data) {
  // console.log("user report list -", data);
  $("#user-report-list").html("");
  data.body.Items.forEach((item) => {
    $(`<li class="p-3 text-white text-uppercase mb-1 pointer action" style="background-color: #b5b5b5;" data-action="view-user-report" data-created="${
      item.created
    }">
          <span>${moment(item.created).format("LLL")}</span>
        </li>`).appendTo("#user-report-list");
  });
}

function ptUserReportsSection() {
  $(".sections").addClass("d-none");
  $(".sections.view-user-reports").removeClass("d-none");
  // $("#visit-detail-iframe").attr("src", "../forms/visit-report-form.html");
  getResponse(
    `/users/${sessionStorage.getItem("pid")}/checklist`,
    {
      email: sessionStorage.getItem("pt-email"),
    },
    ptViewUserReportsList
  );
}

function ptShowVisitDetails(form_type, created) {
  getResponse(
    `/users/${sessionStorage.getItem("pid")}/forms`,
    {
      email: sessionStorage.getItem("pt-email"),
      form_type: form_type,
      created: created,
    },
    function (data) {
      let form_data = data.body.Items[0].form_data;
      $("#visit-detail-iframe").css("display", "none");
      $("#visit-detail").css("display", "block");
      $("#visit-detail").html(ptRenderForm(data));
      // let url = "../forms/visit-report-form.html";
      // $.ajax({
      //   url: url,
      //   async: true,
      //   success: function (data) {
      //     $("#visit-detail-iframe").css("display", "none");
      //     $("#visit-detail").html(regexGetBodyContent(data));
      //     js2form("forms", formData);
      //   },
      // });
    }
  );
}

function ptViewVisitDetailsList(data) {
  // console.log("visits list -", data);
  $("#visit-details-list").html("");
  data.body.Items.forEach((item) => {
    $(`<li class="p-3 text-white text-uppercase mb-1 pointer action" style="background-color: #b5b5b5;" data-action="view-visit-details" data-form-type='${
      item.form_type
    }' data-created="${item.created}">
          <span>${moment(item.created).format("LLL")}</span>
        </li>`).appendTo("#visit-details-list");
  });
}

function ptVisitDetailsSection() {
  $("#visit-detail-iframe").css("display", "block");
  $("#visit-detail").css("display", "none");

  $(".sections").addClass("d-none");
  $(".sections.view-visit-details").removeClass("d-none");
  $("#visit-detail-iframe").attr("src", "../forms/visit-report-form.html");
  getResponse(
    `/users/${sessionStorage.getItem("pid")}/forms`,
    {
      email: sessionStorage.getItem("pt-email"),
      form_type: "visit_report_form",
    },
    ptViewVisitDetailsList
  );
}

function renderFilledDetails(form_data) {
  let html = "";
  delete form_data.email;
  delete form_data.form_type;
  for (const [key, value] of Object.entries(form_data)) {
    if (key.includes("file")) {
    } else if (key.includes("signature") && !key.includes("date")) {
      //paragraph
      // new line
      // signature image
      html += `<p class="mb-1 bg-secoundary" style="font-size:18px"><span class="font-weight-bold text-capitalize" style="">${key.replaceAll(
        "_",
        " "
      )}&nbsp: &nbsp</span> <img src="${value}" style="height:auto;width:350px;" /></p>`;
    } else {
      html += `<p class="mb-1 bg-secoundary" style="font-size:18px"><span class="font-weight-bold text-capitalize" style="">${key.replaceAll(
        "_",
        " "
      )}&nbsp: &nbsp</span> ${value}</p>`;
    }
  }
  return html;
}

function ptRenderForm(data) {
  // console.log("render-form -", data);
  var form_data = data.body.Items[0].form_data;
  let form_type = data.body.Items[0].form_type;
  // let url = "";
  // if (form_type === "adult_form") {
  //   url = "../forms/adult-form.html";
  // }
  // $.ajax({
  //   url: url,
  //   async: true,
  //   success: function (data) {
  //     $("#user-report-iframe").attr("srcdoc", data);
  //     js2form("forms", form_data);
  //   },
  // });
  // // $("#user-report-iframe").attr("src", url);
  // // console.log("form Data - ", form_data);
  // // console.log($("#user-report-iframe").contents().find("form"));
  // // let form = $("#user-report-iframe").contents().find("form")[0];
  // // js2form("forms", form_data);

  return renderFilledDetails(form_data);
}

function ptShowForm(form_type, created) {
  getResponse(
    `/users/${sessionStorage.getItem("pid")}/forms`,
    {
      email: sessionStorage.getItem("pt-email"),
      form_type: form_type,
      created: created,
    },
    function (data) {
      $("#user-report-data").html(ptRenderForm(data));
    }
  );
}
function ptViewFormsList(data) {
  // console.log("forms list -", data);
  $("#forms-list").html("");
  data.body.Items.forEach((item) => {
    $(`<li class="p-3 text-white text-uppercase mb-1 pointer action" style="background-color: #b5b5b5;" data-action="view-form" data-form-type='${
      item.form_type
    }' data-created="${item.created}">
          <span class="d-block mb-1 text-uppercase font-weight-bold">${item.form_type.replaceAll(
            "_",
            " "
          )}</span>
          <span>${moment(item.created).format("LLL")}</span>
        </li>`).appendTo("#forms-list");
  });
}

function ptViewFormsSection() {
  $(".sections").addClass("d-none");
  $(".sections.view-forms").removeClass("d-none");
  getResponse(
    `/users/${sessionStorage.getItem("pid")}/forms`,
    {
      email: sessionStorage.getItem("pt-email"),
    },
    ptViewFormsList
  );
}

function confirmAppointment(eid, pid, pt_mail, doc_mail) {
  $.showConfirm({
    title: "Appointment Confirmation",
    body: "Do you want to confirm this appointment",
    textTrue: "CONFIRM",
    textFalse: "CANCEL",
    onSubmit: function (result) {
      if (result) {
        $.ajax({
          url: `${ENDPOINT}/admin/appointments`,
          type: "PUT",
          dataType: "json",
          data: JSON.stringify({
            patient_id: pid,
            patient_email: pt_mail,
            creator_email: doc_mail,
            event_id: eid,
          }),
          async: false,
          contentType: "application/json",
        })
          .done(function (res) {
            console.log(res);
            if (res.statusCode == 200) {
              successToast("Appointment Confirmed");
            } else {
              dangerToast("Confirmation Failed");
            }
          })
          .fail(function (err) {
            console.log("error -", err);
            dangerToast("Confirmation Failed");
            return err;
          });
      }
    },
  });
}

function showInvoice(id) {
  getResponse("/admin/users", { filter_name: "sub", filter_value: id }, null);

  var htmlPage = `<html><head>${bootstrapCDN}${style}</head><body>${renderInvoice()}</body></html>`;

  $.showModal({
    title:
      "INVOICE <button class='btn btn-sm btn-primary position-absolute print' style='right:50px;'>PRINT</button>",
    body: `<iframe id="printContent" name="printContent" height="500" srcdoc='${htmlPage}'></iframe>`,
  });
  var child = $("iframe#printContent").height();
  var parent = $("iframe#printContent").parent().height(500);
  console.log(parent);
}

function openPatientDashboard(id, eid) {
  window.location.href = `./patient/pt-dashboard.html?pid=${id}&eid=${eid}`;
}

$(".print").on("click", function (e) {
  window.frames["printContent"].print();
});

function userProfileModal(data) {
  $.showModal({ title: "USER PROFILE", body: renderUserHtml(data.data[0]) });
}

$("#patient-select").select2({
  // minimumInputLength: 3,
  placeholder: "Select a Patient",
  width: "75%",
  ajax: {
    delay: 250,
    url: ENDPOINT + "/admin/users",
    data: function (params) {
      var filter_name = $("#patient-filter-name").val();
      var query = {
        filter_name: filter_name,
        filter_value: params.term,
        limit: 10,
      };
      if (
        params._type === "query:append" &&
        sessionStorage.getItem("patient_select_pagination_token") != ""
      ) {
        query.PaginationToken = sessionStorage.getItem(
          "patient_select_pagination_token"
        );
        sessionStorage.setItem("patient_select_pagination_token", "");
      }

      return query;
    },
    processResults: function (data) {
      if (data.hasOwnProperty("PaginationToken")) {
        sessionStorage.setItem(
          "patient_select_pagination_token",
          data.PaginationToken
        );
      } else {
        sessionStorage.setItem("patient_select_pagination_token", "");
      }
      var items = [];
      var filter_name = $("#patient-filter-name").val();
      items.push({ id: "", text: "All" });
      data.data.forEach(function (item, index) {
        items.push({ id: item.sub, text: item[filter_name] });
      });

      return {
        results: items,
        // pagination: {
        //   more: true,
        // },
      };
    },
  },
});

$("#form-reset").on("click", function () {
  $("#patient-select").empty();
});

$("#patient-select").on("select2:select", function (e) {
  var id = e.params.data.id;
  var url = ENDPOINT + "/admin/users?filter_name=sub&filter_value=" + id;
  $.get(url, function (result) {
    $("#patient-email").val(result.data[0].email);
  });
});

// $(".datepicker").datepicker();

// if (!Modernizr.touch) {
//   // console.log(Modernizr.touch);
//   //if not a touch device initilize datepicker
//   $("#start-time,#end-time").attr("type", "text");
//   $("#start-date,#end-date").attr("type", "text");
//   $(".datetimepicker").datetimepicker({
//     icons: {
//       time: "fa fa-clock-o",
//       date: "fa fa-calendar",
//       up: "fa fa-chevron-up",
//       down: "fa fa-chevron-down",
//     },
//     daysOfWeekDisabled: [5],
//     // inline: true,
//     sideBySide: true,
//   });

//   $("#start-time").datetimepicker();
//   $("#end-time").datetimepicker({
//     useCurrent: false, //Important! See issue #1075
//   });
//   $("#start-time").on("dp.change", function (e) {
//     $("#end-time").data("DateTimePicker").minDate(e.date);
//   });
//   $("#end-time").on("dp.change", function (e) {
//     $("#start-time").data("DateTimePicker").maxDate(e.date);
//   });
// } else {
//   $("#start-time,#end-time").attr("type", "datetime-local");
//   $("#start-date,#end-date").attr("type", "date");
// }

function getResponse(link, formData, callback) {
  $.ajax({
    url: CORS + ENDPOINT + link,
    type: "get",
    dataType: "json",
    data: formData,
    contentType: "application/json",
  })
    .done(function (res) {
      callback(res);
    })
    .fail(function (error) {
      console.log("error -", error);
    });
  // .always(function (result) {});
}

function getSyncResponse(link, formData) {
  $.ajax({
    url: CORS + ENDPOINT + link,
    type: "get",
    dataType: "json",
    data: formData,
    async: false,
    contentType: "application/json",
  })
    .done(function (res) {
      return res;
    })
    .fail(function (err) {
      console.log("error -", err);
      return err;
    });
  // .always(function (result) {});
}

function findAge(birthdate) {
  return moment().diff(birthdate, "years", false);
}

function getUserName(data) {
  return `${data.given_name != null ? `${data.given_name} ` : ""}
  ${data.middle_name != null ? `${data.middle_name} ` : ""}
  ${data.family_name != null ? `${data.family_name} ` : ""}`;
}

function renderUserHtml(data) {
  var htmlContent = `<div class="row m-2 py-3 small rounded shadow">
  <div class="col-sm-auto text-center"><img class="w-100" src=${
    data.picture != null ? data.picture : "./assets/img/user.svg"
  } style="max-width: 100px;" /></div>
  <div class="col">
      <div class="row">
          <div class="col">
              <h5 class="text-capitalize mb-0 font-weight-bold">${getUserName(
                data
              )}</h5>
              <p>${data.email}</p>
              <p class="mb-0"><strong>DOB</strong>:  ${
                data.birthdate != null ? data.birthdate : "-"
              }</p>
              <p class="mb-0"><strong>Age</strong>: ${
                data.birthdate != null ? findAge(data.birthdate) : "-"
              } Years</p>
          </div>
          <div class="col">
              <p class="mb-0"><strong>Nationality</strong>: ${
                data.locale != null ? data.locale : "-"
              }</p>
              <p class="mb-0"><strong>Phone</strong>: ${
                data.phone_number != null ? data.phone_number : "-"
              }</p>
              <p class="mb-0"><strong>Address</strong>: ${
                data.address != null ? data.address : "-"
              }</p>
              <p class="mb-0"><strong>Emirates ID</strong>: ${
                data.preferred_username != null ? data.preferred_username : "-"
              }</p>
              <button class="btn btn-outline-primary action btn-sm m-1" type="button" data-action="pt-dashboard" data-pid='${
                data.sub
              }'>PATIENT DASHBOARD</button>
              <a class="btn btn-outline-primary btn-sm" href="#collapse-${
                data.sub
              }" role="button" aria-expanded="true" aria-controls="collapse-${
    data.sub
  }" data-toggle="collapse">View Emirates ID</a></div>
      </div>
  </div>
  <div class="col-12 collapse" id="collapse-${data.sub}">
      <div class="row mt-2">
        <div class="col-sm-12 col-md-6 text-center"><img class="img-fluid" src="${
          data["custom:emirates_id_front"] || "./assets/img/card-holder.png"
        }" /></div>
        <div class="col-sm-12 col-md-6 text-center"><img class="img-fluid" src="${
          data["custom:emirates_id_back"] || "./assets/img/card-holder.png"
        }" /></div>
      </div>
  </div>
</div>`;
  return htmlContent;
}

function eventTimeToString(startTime, endTime) {
  let start = moment(startTime).format("LL");
  let end = moment(endTime).format("LT");
  return `${start} - ${end}`;
}

function serviceDetails(service) {
  var text = `${
    service?.service_type != null ? `${service?.service_type} | ` : ""
  } 
  ${service?.service_amount != null ? `${service?.service_amount}` : ""}
  ${service?.service_currency != null ? `${service?.service_currency} | ` : ""}
  ${
    service?.service_duration != null
      ? `${service?.service_duration} min | `
      : ""
  }
  ${service?.service_desc != null ? `${service?.service_desc} ` : ""};
  `;
  return text;
}

function renderAppointmentHtml(event) {
  htmlContent = `<div class="row m-1 py-3 small rounded shadow" >
    <div class="col">
        <div class="row">
            <div class="col">
                <p class="font-weight-bold mb-0" style="font-size:1rem;">Meeting with ${
                  event?.extendedProperties?.private?.patient_email || "-"
                }</p>
                <p class="mb-2">${eventTimeToString(
                  event.start.dateTime,
                  event.end.dateTime
                )}</p>
            </div>
            <div class="col-auto">
                <p class="mb-1"><strong>File No. </strong> ${
                  event?.extendedProperties?.private?.file_no
                }</p>
            </div>
        </div>
        <p class="mb-1"><strong>Chief Complaint: </strong> ${
          event?.extendedProperties?.private?.chief_complaint || "-"
        }</p>
        <p class="mb-1"><strong>Location: </strong> ${event.location || "-"}</p>
        <p class="mb-1"><strong>Service Details: </strong> ${serviceDetails(
          event?.extendedProperties?.private
        )} 
        </p>`;
  if (
    event.organizer.email == event?.extendedProperties?.private?.doctor_email
  ) {
    htmlContent += `<p class="mb-0"><strong>Doctor: </strong>${
      event.organizer.displayName || event.organizer.email
    }</p>`;
  } else {
    htmlContent += `<p class="mb-0"><strong>Doctor: </strong>${
      event.organizer.email
    }</p>
                    <p class="mb-1">Created By ${
                      event.organizer.displayName || event.organizer.email
                    }</p>`;
  }

  htmlContent += `<div class="row">
                    <div class="col">
                        <p class="mb-1"><strong>Status: </strong>${event?.extendedProperties?.private?.event_status}</p>`;

  if (event?.extendedProperties?.private?.meeting_link != null) {
    htmlContent += `<p class="mb-1"><strong>Meeting: </strong><a href="${event?.extendedProperties?.private?.meeting_link}" target="_blank" >Start Meeting</a></p>`;
  }

  htmlContent += `</div>`;
  htmlContent += `  <div class="col">`;

  if (
    event?.extendedProperties?.private?.payment_ref != null &&
    event?.extendedProperties?.private?.payment_status.toLowerCase() === "paid"
  ) {
    htmlContent += `    <p class="mb-1 text-ellipsis" onclick="textEllipsis(this)"><strong>Payment Ref: </strong> ${event?.extendedProperties?.private?.payment_ref}</p>`;
  }

  if (
    event?.extendedProperties?.private?.amount != null ||
    event?.extendedProperties?.private?.payment_type != undefined
  ) {
    htmlContent += `    <p class="mb-1"><strong>Payment Type: </strong> ${event?.extendedProperties?.private?.payment_type} </p>`;
  }

  htmlContent += `   </div>`;
  htmlContent += `</div>
                <button class="btn btn-outline-primary action btn-sm m-1" type="button" data-action="profile" data-pid='${event?.extendedProperties?.private?.patient_id}'>USER PROFILE</button>`;

  if (
    event?.extendedProperties?.private?.event_status.toLowerCase() == "pending"
  ) {
    htmlContent += `<button class="btn btn-outline-primary action btn-sm m-1" type="button" data-action="confirm" data-eid='${event.id}' data-pid="${event?.extendedProperties?.private?.patient_id}" data-pt-mail="${event?.extendedProperties?.private?.patient_email}" data-doc-mail="${event?.extendedProperties?.private?.cal_id}">CONFIRM</button>`;
  }

  htmlContent += `<button class="btn btn-outline-primary action btn-sm m-1" type="button" data-action="reschedule" data-eid='${event.id}'>RESCHEDULE</button>
                <button class="btn btn-outline-primary action btn-sm m-1" type="button" data-action="pt-dashboard" data-pid='${event?.extendedProperties?.private?.patient_id}' data-eid='${event.id}'>PATIENT DASHBOARD</button>`;

  if (
    event?.extendedProperties?.private?.payment_status != null &&
    event?.extendedProperties?.private?.payment_status.toLowerCase() == "paid"
  ) {
    htmlContent += `<button class="btn btn-outline-primary action btn-sm m-1" type="button" data-action="invoice" data-eid='${event.id}' >INVOICE</button>`;
  } else {
    htmlContent += `<button class="btn btn-outline-primary btn-sm m-1" type="button" onclick="copyPaymentLink(this)" data-data="${ENDPOINT}/payments/${event?.extendedProperties?.private?.patient_id}?creator_email=${event?.extendedProperties?.private?.cal_id}&event_id=${event.id}" >PAYMENT LINK <i class="fa fa-clipboard mx-2 cursor-copy" onclick="copyToClipboard(this)"></i></button>`;
  }
  if (event?.extendedProperties?.private?.zoom_start_url != null) {
    htmlContent += `<a class="btn btn-outline-primary btn-sm m-1 text-uppercase" href="${event?.extendedProperties?.private?.zoom_start_url}" target="_blank" >START MEETING</a>`;
  }
  htmlContent += `</div>
        </div>`;
  return htmlContent;
}

function renderInvoice(data) {
  var htmlContent = `<div class="row">
                      <div class="col-12 text-center"><img src="./assets/img/araa-consultancy-and-studies-logo.png" />
                          <p class="mb-0">Experience Most Compassionate Healthcare in UAE</p>
                          <p class="mb-0">Under the</p>
                          <p class="font-weight-bold mb-5">Leadership of Dr. Ahmed Alnajjar</p>
                      </div>
                      <div class="col-12">
                          <div class="row mb-5">
                              <div class="col">
                                  <p>Name: Mohammed Salman</p>
                                  <p>Email : mohammedsalman0258@gmail.com</p>
                                  <p>Age: 41 Years</p>
                                  <p>Appointment : 30/1/2021 03:00 PM - 3:30 PM</p>
                                  <p>Chief Complaint : Depression</p>
                              </div>
                              <div class="col-auto">
                                  <p>File No. 168254858774</p>
                                  <p>Doctor: Dr. Ahmed Alnajjar</p>
                              </div>
                          </div>
                          <div class="table-responsive">
                              <table class="table">
                                  <thead>
                                      <tr>
                                          <th>Description</th>
                                          <th>Price</th>
                                      </tr>
                                  </thead>
                                  <tbody>
                                      <tr>
                                          <td>Video Call</td>
                                          <td>500 AED</td>
                                      </tr>
                                  </tbody>
                                  <tfoot>
                                      <tr>
                                          <td>Total</td>
                                          <td>500 AED</td>
                                      </tr>
                                  </tfoot>
                              </table>
                          </div>
                      </div>
                    </div>`;
  htmlContent += `<footer class="sticky-footer w-100 text-center">
                      <p class="mb-0 font-weight-bold">Araa Consultancy and Studies</p>
                      <p class="mb-0">Unit 201, DBCS Building Al Gar houd 13866 Dubai 941, Tel: +971 ---------------</p>
                      <p class="mb-0">Email: ahmedalnajjar@ahmedalnajjar.com web: www.ahmedalnajjar.com</p>
                  </footer>`;
  return htmlContent;
}

function renderPtDetails(data) {
  sessionStorage.setItem("pt-email", data.email);

  htmlContent = `<div class="row">
    <div class="col-md-12 col-lg-5">
        <p class="mb-1"><strong>Patient Name: </strong>${getUserName(data)}</p>
        <p class="mb-1"><strong>Patient Email: </strong> ${data.email}</p>
        <p class="mb-1"><strong>Sex: </strong> ${
          data.gender != null ? data.gender : "-"
        }</p>
        <p class="mb-1"><strong>Emirates ID: </strong> ${
          data.preferred_username != null ? data.preferred_username : "-"
        }</p>
        <p class="mb-1"><strong>Age: </strong> ${findAge(data.birthdate)}</p>
        <p class="mb-1"><strong>DOB: </strong> ${
          data.birthdate != null ? data.birthdate : "-"
        }</p>
    </div>
    <div class="col-12 col-md-8 col-lg-5">
        <p class="mb-1"><strong>Nationality: </strong>${
          data.locale != null ? data.locale : "-"
        }</p>
        <p class="mb-1"><strong>Patient Type</strong> -</p>
        <p class="mb-1"><strong>Mobile No: </strong>${
          data.phone_number != null ? data.phone_number : "-"
        }</p>
        <p class="mb-1"><strong>Start Time: </strong> - </p>
        <p class="mb-1"><strong>End Time: </strong> - </p>
    </div>
    <div class="col-sm-12 col-md-auto order-sm-1">
        <div class="w-100 text-center p-2"><img style="width: 125px;height: 125px;" src=${
          data.picture != null ? data.picture : "../assets/img/user.svg"
        } /></div>
    </div>
</div>`;
  return htmlContent;
}

function regexGetBodyContent(str) {
  var bodyTags = str.match(/<form.*?>([\s\S]*)<\/form>/gim);
  console.log("bodytag - ", bodyTags);
  // var bodyTags = str.match(/<\/*body[^>]*>/gim);
  // returns an array
  // bodyTags[0] is body open, bodyTags[1] is body close
  // unless someone output the markup backwards :)
  // bodyContents = str.slice(bodyTags[0].length, -bodyTags[1].length);
  bodyContents = bodyTags[0];
  return bodyContents; // use as innerHTML of <body>
}

let surveyData = "";
function drawChart(survey) {
  console.log(survey);
  surveyData = survey;
  const scaleRange = 5;
  var filledQuestions = {};
  let labels = [];
  let data = [];
  if (survey != null) {
    $.each(survey.sections, function (index, section) {
      let block =
        section.totalQuestions / (section.totalQuestions * scaleRange);
      let sum = 0;
      $.each(section.questions, function (index2, question) {
        sum += question.value * block;
        filledQuestions[question.en] = question.value;
      });
      let percent = (sum * 100) / section.totalQuestions;
      if (section.sectionType === "scale") {
        labels.push(section.title.en);
        data.push(parseFloat(percent.toFixed(1)));
      }
    });
    updateChart(labels, data);
  }
  if (!jQuery.isEmptyObject(survey)) {
    $("#check-list-graph").removeClass("d-none");
  }
  if (!jQuery.isEmptyObject(filledQuestions)) {
    fillSurvey(filledQuestions);
  }
}

$(window).resize(function () {
  if (document.querySelector("#user-report-chart canvas").chart != null) {
    drawChart(surveyData);
  }
});

function fillSurvey(data) {
  $("#user-report-questions").removeClass("d-none");
  $("#filledSurvey").html(surveyContent);
  showTab(currentTab);
  js2form(document.getElementById("filledSurvey"), data);
}

function updateChart(labels, data) {
  let user_report_chart = document.querySelector("#user-report-chart canvas")
    .chart;
  user_report_chart.data.labels = labels;
  user_report_chart.data.datasets[0].data = data;
  user_report_chart.update();
}

function textEllipsis(obj) {
  console.log($(obj).hasClass("text-ellipsis"));
  $(obj).hasClass("text-ellipsis")
    ? $(obj).removeClass("text-ellipsis")
    : $(obj).addClass("text-ellipsis");
}

function copyPaymentLink(obj) {
  console.log($(obj).data("data"));
  var input = document.body.appendChild(document.createElement("input"));
  input.value = $(obj).data("data");
  input.focus();
  input.select();
  document.execCommand("copy");
  input.parentNode.removeChild(input);
}
